version: "3.8"

services:
  # MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: newcontainment-mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    restart: unless-stopped
    networks:
      - newcontainment

  # Database (SQLite - using a volume for persistence)
  db:
    image: alpine:latest
    container_name: newcontainment-db
    volumes:
      - db_data:/app/data
    command: sh -c "mkdir -p /app/data && chmod 777 /app/data && tail -f /dev/null"
    networks:
      - newcontainment

  # Backend API
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: newcontainment-backend
    ports:
      - "5000:5000"
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000;https://+:5001
      - ConnectionStrings__DefaultConnection=Data Source=/app/data/app.db
      - MQTT_ENABLE=true
      - MQTT_BROKER_HOST=mosquitto
      - MQTT_BROKER_PORT=1883
      - ENABLE_SEED_DATA=true
      - ENABLE_SEED_CLEANUP=false
      - ENABLE_SEED_VALIDATION=false
    volumes:
      - db_data:/app/data
      - ./Backend/wwwroot:/app/wwwroot
    depends_on:
      - mosquitto
      - db
    restart: unless-stopped
    networks:
      - newcontainment

  # Frontend
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: newcontainment-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:5000
      - NEXT_PUBLIC_MQTT_ENABLED=true
      - NEXT_PUBLIC_MQTT_HOST=mosquitto
      - NEXT_PUBLIC_MQTT_PORT=9001
      - NEXT_PUBLIC_MQTT_PROTOCOL=mqtt
      - NEXT_PUBLIC_MQTT_USE_WEBSOCKET=true
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - newcontainment

  # Middleware (ZKTeco Device Manager)
  middleware:
    build:
      context: ./Middleware
      dockerfile: Dockerfile
    container_name: newcontainment-middleware
    environment:
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=1883
    volumes:
      - ./Middleware/JSON:/app/JSON
      - ./Middleware/backups:/app/backups
    depends_on:
      - mosquitto
    restart: unless-stopped
    networks:
      - newcontainment

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: newcontainment-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/newcontainment.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - newcontainment

volumes:
  db_data:
    driver: local
  mosquitto_data:
    driver: local
  mosquitto_log:
    driver: local

networks:
  newcontainment:
    driver: bridge
