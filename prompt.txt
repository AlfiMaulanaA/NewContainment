1. Hapus Fungsi dari frontend dan backend GET http://192.168.0.138:3000/management/user-activity/?_rsc=8xx96 404 (Not Found)
fetchServerResponse @ 2472-5a026a03abaa67cc.js:1
(anonymous) @ 2472-5a026a03abaa67cc.js:1
task @ 2472-5a026a03abaa67cc.js:1
processNext @ 2472-5a026a03abaa67cc.js:1
enqueue @ 2472-5a026a03abaa67cc.js:1
prefetchReducer @ 2472-5a026a03abaa67cc.js:1
clientReducer @ 2472-5a026a03abaa67cc.js:1
(anonymous) @ 2472-5a026a03abaa67cc.js:1
eg @ fd9d1056-67e588fc5bd3fead.js:9
dg @ fd9d1056-67e588fc5bd3fead.js:9
(anonymous) @ 2472-5a026a03abaa67cc.js:17
useReducerWithReduxDevtoolsImpl @ 2472-5a026a03abaa67cc.js:1
Router @ 2472-5a026a03abaa67cc.js:1
Mf @ fd9d1056-67e588fc5bd3fead.js:9
Bh @ fd9d1056-67e588fc5bd3fead.js:9
rC @ fd9d1056-67e588fc5bd3fead.js:9
Jk @ fd9d1056-67e588fc5bd3fead.js:9
Mk @ fd9d1056-67e588fc5bd3fead.js:9
tk @ fd9d1056-67e588fc5bd3fead.js:9
qf @ fd9d1056-67e588fc5bd3fead.js:9
P @ 2472-5a026a03abaa67cc.js:25Understand this error

2. Cek 2472-5a026a03abaa67cc.js:1  GET http://192.168.0.138:3000/management/sensors/?_rsc=8xx96 404 (Not Found) analisa error tersebut pada production linux

3. cek setiap api CRUD untuk management sudah ada apa saja? apakan untuk CRUD role, CRUD menu group, CRUD menu items sudah pada ada?
apakah ada data dummy atau mock data pada menu management?

4. buatkan pada management/menu pada tabs Menu Items agar bisa sort by Menu group, lalu cek kenapa tidak bisa update Menu Group pada Menu item

5. lalu bagaimana cara memudahkan pada saat pemilihan order di Menu Group atau Menu Items

6. pada file seed yang digunakan yang mana saja? coba optimalkan

7. Buatkan fitur untuk save interval log deviceSensor data agar bisa diatur interval waktu untuk savenya dari frontend

8. buatkan juga fitur untuk gabungan fitur config system enable disable temperature threshold, trigger upper threshold, trigger bottm threshold, dan dengan menambahkan color range untuk temperature sensor. 

9. Buat juga fungsi untuk auto save deviceSensorData ketika dalam kondisi jika nilai temperature berada didalam nilai upper threhold, buatkan dan modifiaksi service pada backendnya



### 1. Test Device Connection (Single Device)

**Request Topic**: `accessControl/device/command`

**Minimal Request Payload**:

```json
{
  "command": "testConnection",
  "data": {
    "device_id": "device_1"
  }
}
```

**Optional Parameters**:

```json
{
  "command": "testConnection",
  "data": {
    "device_id": "device_1"
  }
}
```

### 1b. Test All Devices Connection

**Request Topic**: `accessControl/device/command`

**Test All Devices**:

```json
{
  "command": "testConnection",
  "data": {
    "device_id": "all"
  }
}
```

**Response Topic**: `accessControl/device/response`

**Single Device Success Response**:

```json
{
  "command": "testConnection",
  "status": "success",
  "data": {
    "test_type": "single_device",
    "device_id": "device_1",
    "device_name": "Main Entrance",
    "result": {
      "status": "online",
      "response_time_ms": 45.25,
      "device_info": {
        "firmware_version": "Ver 6.60 Apr 12 2017",
        "user_count": 150,
        "attendance_count": 2500
      }
    }
  }
}
```

**All Devices Success Response**:

```json
{
  "command": "testConnection",
  "status": "success",
  "data": {
    "test_type": "all_devices",
    "summary": {
      "total_devices": 3,
      "online_devices": 2,
      "offline_devices": 1,
      "success_rate": 66.67
    },
    "devices": [
      {
        "device_id": "device_1",
        "device_name": "Main Entrance",
        "status": "online",
        "response_time_ms": 45.25
      },
      {
        "device_id": "device_2",
        "device_name": "Back Door",
        "status": "online",
        "response_time_ms": 52.1
      },
      {
        "device_id": "device_3",
        "device_name": "Office Door",
        "status": "offline",
        "error": "Connection timeout"
      }
    ]
  }
}
```



### 2. Add New Device

**Request Topic**: `accessControl/device/command`

**Minimal Request Payload** (only required fields):

```json
{
  "command": "addDevice",
  "data": {
    "id": "device_3",
    "name": "New Office Door",
    "ip": "192.168.0.203"
  }
}
```

**Complete Request Payload** (with optional parameters):

```json
{
  "command": "addDevice",
  "data": {
    "id": "device_3",
    "name": "New Office Door",
    "ip": "192.168.0.203",
    "port": 4370,
    "password": 0,
    "timeout": 5,
    "force_udp": false,
    "enabled": true
  }
}
```

**Parameter Details**:

- **`id`**: String, **Required** - Unique device identifier
- **`name`**: String, **Required** - Device display name
- **`ip`**: String, **Required** - Device IP address
- **`port`**: Integer, Optional (default: 4370) - Device port
- **`password`**: Integer, Optional (default: 0) - Device access password
- **`timeout`**: Integer, Optional (default: 5) - Connection timeout in seconds
- **`force_udp`**: Boolean, Optional (default: false) - Force UDP connection
- **`enabled`**: Boolean, Optional (default: true) - Enable/disable device

**Response Topic**: `accessControl/device/response`

**Success Response**:

```json
{
  "status": "success",
  "message": "Device New Office Door added successfully",
  "device": {
    "id": "device_3",
    "name": "New Office Door",
    "ip": "192.168.0.203",
    "port": 4370,
    "password": 0,
    "timeout": 5,
    "force_udp": false,
    "enabled": true
  }
}
```

**Error Response**:

```json
{
  "status": "error",
  "message": "Device with ID device_3 already exists"
}
```

### 3. Update Existing Device

**Request Topic**: `accessControl/device/command`

**Request Payload** (only fields to update):

```json
{
  "command": "updateDevice",
  "data": {
    "device_id": "device_3",
    "name": "Updated Office Door",
    "ip": "192.168.0.204",
    "enabled": false
  }
}
```

**Response Topic**: `accessControl/device/response`

**Success Response**:

```json
{
  "status": "success",
  "message": "Device device_3 updated successfully",
  "device": {
    "id": "device_3",
    "name": "Updated Office Door",
    "ip": "192.168.0.204",
    "port": 4370,
    "password": 0,
    "timeout": 5,
    "force_udp": false,
    "enabled": false
  },
  "old_device": {
    "id": "device_3",
    "name": "New Office Door",
    "ip": "192.168.0.203",
    "port": 4370,
    "password": 0,
    "timeout": 5,
    "force_udp": false,
    "enabled": true
  }
}
```

### 4. Delete Device

**Request Topic**: `accessControl/device/command`

**Request Payload**:

```json
{
  "command": "deleteDevice",
  "data": {
    "device_id": "device_3"
  }
}
```

**Response Topic**: `accessControl/device/response`

**Success Response**:

```json
{
  "status": "success",
  "message": "Device Updated Office Door deleted successfully",
  "deleted_device": {
    "id": "device_3",
    "name": "Updated Office Door",
    "ip": "192.168.0.204",
    "port": 4370,
    "password": 0,
    "timeout": 5,
    "force_udp": false,
    "enabled": false
  }
}
```

### 5. List All Devices

**Request Topic**: `accessControl/device/command`

**Request Payload**:

```json
{
  "command": "listDevices"
}
```

**Response Topic**: `accessControl/device/response`

**Success Response**:

```json
{
  "status": "success",
  "message": "Found 2 devices",
  "devices": [
    {
      "id": "device_1",
      "name": "Main Entrance",
      "ip": "192.168.0.201",
      "port": 4370,
      "password": 0,
      "timeout": 5,
      "force_udp": false,
      "enabled": true
    },
    {
      "id": "device_2",
      "name": "Back Door",
      "ip": "192.168.0.202",
      "port": 4370,
      "password": 0,
      "timeout": 5,
      "force_udp": false,
      "enabled": true
    }
  ],
  "total_devices": 2
}
```